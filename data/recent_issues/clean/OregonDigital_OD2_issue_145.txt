Build a Hyrax-friendly JP2 encoder using our logic
Descriptive summary We want a way to use GraphicsMagick to encode from any image source into JP2.  We also want to make sure the encoded JP2 is as optimized as possible for RAIS to serve.  I've written up some general guidelines in the past about this:  Expected behavior   When ingesting an image in any format (within reason), a JP2 is generated  We want to ensure our list of filetypes doesn't include those which aren't truly images, but which GraphicsMagick may support, such as PDFs or other binary files that happen to have images in them (see     When a JP2 is generated, it has tiling at 1024x1024, and a sensible number of resolution levels based on its size  PDFs should go through a ... "fork" of this process, for lack of a better term.  They need one JP2 per page in order to make them easier to handle than our current "four JPGs per page" setup.  Perfect success would be defined as an implementation that works with Hydra really well, as is the case with   If it isn't easy to "register" our encoder in the Hyrax processor list, we should just have lib/oregon_digital/derivatives/processors/jp2.rb and just call it from OregonDigital::FileSetDerivativesService.  We can make it more like a Hyrax derivative processor once we have something working.    Related work #141, #78, #30