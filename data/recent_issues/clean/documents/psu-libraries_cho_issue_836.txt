Only use internal Valkyrie IDs in member_of_collection_ids
Due to some misunderstanding about how alternate_id is implemented in Valkyrie, it may be better to use only the internally-minted Valkyrie ID as a value for member_of_collection_ids. Doing so would keep CHO closer to Valkyrie's intentions behind how ids are used to define membership. For example, all other membership fields, such as file set ids and file ids, as well as all the other fields that control relationships between data dictionary components, use Valkyrie IDs. Making member_of_collection_ids do the same would be keeping things more consistent. The bug in #833 has highlighted this issue. Currently, in order to fix this, we would need to search both the alternate id and the Valkyrie ID in order to return relationships for all collections. When works are added to collections via the GUI, the Valkyrie ID is used, but when imported via CSV, it's the alternate id (aka. identifier) that's used. If we ensure that the stored, indexed value is the Valkyrie ID, then the above issue is resolved; however, we have to ensure that users can continue to use the alternate id in CSV import and when searching for collections in the work edit GUI form.