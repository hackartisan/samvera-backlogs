Investigate making RAIS stream JP2s from S3
Descriptive summary I have no idea why, but when first looking at RAIS and S3, I either dismissed the idea of streaming images or else didn't think of it at all.  This has lead to the S3 plugin needing some pretty crazy JP2 download-and-cache logic in order to function, and that logic has to do a lot of work to avoid race conditions. So we have a few options (with unknown tradeoffs at the moment, hence the need for investigation):  Leave things as-is.  This means we have to make sure the RAIS image/container setup handles these downloaded and cached files well and doesn't blow up disk usage (or worse, run out of disk and just die).  The expected benefits for this semi-complex approach: speed.  It takes a bit to grab an image for the first tile or info.json response, but once cached, it's reading things locally which tends to mean sub-500ms tile responses. Stream from S3.  This appears to be doable, but it will take some work to figure out how to connect the S3 APIs from RAIS to the openjpeg libraries.  I'm currently prototyping something that just verifies I can even connect a simple in-memory stream to openjpeg.  The unquestionable benefit here is that we don't need local state anymore (the file download cache).  I expect it to be a lot faster for the first tile/info.json response.  Subsequent requests will likely be slower than a local file, but it may not be slow enough to matter.  Expected behavior Investigation-only, so just more information. Related work This is tangentially related to all the S3 and derivative work: #526 and #554. I also filed a ticket on RAIS for this: uoregon-libraries/rais-image-server#19 Accessibility Concerns N/A