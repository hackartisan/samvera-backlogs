Initial configuration of oEmbed
Descriptive summary EDIT: @CGillen Attempted the above and it doesnt work due to the fact that hyrax uses its own routes instead of using blacklight routes. The gem requires blacklight routes to work. Instead we plan on using https://github.com/ruby-oembed/ruby-oembed Which can manually grab the oembed stuff. We want to get data in the front end using AJAX and parse it out and display the html in order to prevent the app from hanging. ORIGINAL TICKET: First what will need to happen is the installation of the oembed gem. You can follow their step by step guide on how to do this found here. https://github.com/sul-dlss/blacklight-oembed One you have installed the gem and run the bundle install command, the code should now be available to you. Next what needs to happen is the base configuration of oembed. That can also be found https://github.com/sul-dlss/blacklight-oembed Youll have to run the install rake task, which will generate all the files needed by the application to get oembed working. The catalog controller will have to be configured to know what field is configured to be the oembed field. The initializer will need to be configured to know which endpoints to accept. This may need some thought, because you may be able to configure it to use any endpoint. After this is all completed, then you will have to setup the oembed field in the application. The field can be named anything but will follow this format. property :abstract, predicate: ::RDF::Vocab::DC.abstract do |index|     index.as :stored_searchable end  After this field is setup, youll have to add that named field to the configuration in the catalog controller for the oembed stuff. Now, you should be able to ingest a new work, fill out all its required field, add an oembed url to the proper field (using the link pulled from say any youtube video as long as its the actual oembed url) The work should save and on the show page the video should be displaying. Requirements  for an item, we want to be able to add an oEmbed URL to a field (exact field TBD, can create new 'oembed' property for now) and then on the showpage it will show the player for the video