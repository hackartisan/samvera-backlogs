Accommodate strings and/or URIs from migrated metadata
Story As a Metadata Specialist, I want to accommodate repository metadata values for controlled terms supplied either as a URI or a text string for the same metadata field, so that metadata from different originating workflows and sources can be searched and displayed to end users as human readable text, and external RDF-based authority data sources can be periodically refreshed Acceptance Criteria Use one or more of the following options to provide acceptance criteria. Notes We anticipate that most of the objects ingested into Curate will use some kind of batch ingest method, and long-term, Curate will harvest metadata from Emory Libraries sources such as Alma and ArchivesSpace. DAMS and Marc records for Phase 1 migrations will contain some data stored both as text and a URI (e.g. rights statement.org values or Library of Congress subject headings). We can't always anticipate how this data will come through. In the DAMS, we store both the URI and the text value for rights statement.org entries, e.g.:  In Copyright http://rightsstatements.org/vocab/InC/1.0/  Do we need to prefer one over the other? What does QA do related to data not entered through a form? August 2019: how Fedora stores strings vs URIs for controlled fields on our Curate work form Checklist Minimal/MVP: make the data loaded in batch compatible with the form. This may require more prep from our metadata in advance.   Ingest/migrate data with the URI value if required by the form (e.g. right statements.org values)  Accommodate string values for other QA fields tied to external vocabularies if possible, because we will not always have a URI for those  Ideal/Long-Term   If a both URI and a string for the label are supplied for a metadata field, store both, but index only the string for Discovery/consumer display  If only a URI is supplied, query the data source to get the text label and store it along with the URI  If only text exists, store the text only, and index and display the text for staff use and for the consumer front end