Generate persistent identifiers for the Cor repository
Story As a Library Staff Depositor, I want to have a unique, persistent identifier created and assigned for  ingested objects or collections, so that repository resources have a stable, unique identifier that resolves to a URL for long term access and citation purposes Acceptance Criteria Use one or more of the following options to provide acceptance criteria. Notes PID scheme (NOID-based; prefixed; with a specified amount of digits; these values will not collide with legacy Emory PIDs or Laevigata PIDs). We will mint and store IDs for files, objects and collections, but support persistence for objects and collections. See also epic #206 for storing in metadata. REVISION, SEPT: 2019: the cor- prefix convention has been flagged as problematic for Fedora 4 performance related to its pair tree structures. We are revising this to become a suffix instead. For Emory's ID convention, we will generate a 10 digit alphanumeric sequence: 123??????? followed by a text suffix "-cor."  123 are random, numeric values ??????? are random alphabetic or numeric values -cor is a text suffix to indicate a Cor-generated ID  ORIGINAL: For Emory's ID convention, we will add a text prefix "cor." using a period as a delimiter plus a 10 digit alphanumeric sequence: cor.123???????  cor. is a text prefix to indicate a Cor-generated ID (note the period at the end) 123 are random, numeric values ??????? are random alphabetic or numeric values  Links to Additional Information Dated but useful [background information on NOIDs in Samvera[(https://github.com/mlibrary/hydra-prototype/wiki/How-it-Works:-Noids) Estimation worksheet for scale of PIDs needed over time Checklist   NOID based scheme as indicated above (https://docs.google.com/spreadsheets/d/1Z0ebRLaPa4bEJayvTiqwU4ulFglWrpQPgVX6r6v29uY/edit#gid=1362694572&range=8:8)  IDs are generated such that they will be unique across Curate, Self Deposit  Items in the repository can be actionable/accessed using the asset's ID for the Curate, Self Deposit and Lux applications  IDs generated by the repository should not be editable or deleted by end users  The Cor repository ID scheme should only be used for the repository; IDs should only be minted as part of an ingest process  NOIDs are generated for Works  NOIDS are generated for Files  NOIDS are generated for Collections  Given/When/Then  Given (some context) and (some other optional context) When (some action is carried out) Then (a set of observable consequences should occur)