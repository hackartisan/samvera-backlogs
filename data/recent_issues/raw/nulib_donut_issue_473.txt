Index top-level vs child objects in ElasticSearch
In order to simplify the search for collection members, we need to create a field indicating whether a particular member is "top level" – i.e., directly owned by the collection and not by another member of the collection. e.g.: {   "model": {     "application": "Nextgen",     "name": "Image"   },   "accession_number": "inu-wint-1-5",   "admin_set": {     "id": "2bb27658-2086-45ea-a6b5-61e2799216f6",     "title": [       "Herskovits Library of African Studies"     ]   },   "collection": [{     "id": "cd709d41-005f-4ea6-b798-a63d41793a97",     "title": ["The Humphrey Winterton Collection of East African Photographs: 1860-1960"],     "membership": ["top"]   }],   "... other metadata ...": "...",   "visibility": "open" } Using the membership key would also allow us to create other membership types, like featured or cover, to create dynamic and/or rotating featured/cover images for a collection.