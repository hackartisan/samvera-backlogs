DZI glitch in "Aracana Naturae"
URL: https://digital.sciencehistory.org/works/q524jp940/viewer/cz30pt91g Error message: Tile load failed: Image load aborted: [s3 path to the tile] Screenshot:
Jim reports he can reproduce as follows: "you have to go to [the viewer](https://digital.sciencehistory.org/works/sb3979577/viewer/3484zj18b), (for the entire work) and then hit the right or left arrows quickly two or more times." I just reproduced it.
The problem is that error message in the background? Otherwise works as expected?  I think this happens when`vips` didn't make exactly all the tiles that `OpenSeadragon` expects. OSD can fill in with other tiles so you don't really notice. But the error message does annoyingly show up on screen.   I [reported this once to vips](https://github.com/libvips/libvips/issues/795) and it resulted in some communication between vips and OSD developers, that theoretically should have resulted in a fix in vips. But it's unclear to me what version of vips is supposed to include the fix. (And we don't know exactly what version of vips we created a given DZI tileset with).   Another way to respond to this, of course, would be keeping that error off the canvas -- it might output to JS console, but shouldn't be output to canvas like that. We could look at OSD API or ask on OSD GH Issues for if there's a way to do that. 
This quite possibly will exist on new app too (I _think_ maybe I've seen it already in new app), so perhaps we should move the issue there to be triaged. 
OK, vips maintainer says that the earlier problem I was aware of was fixed in vips 8.6 from Dec 2017.   Running `vips --version` on kithe jobs server, I get `vips-8.5.8`. (Not sure about on chf_sufia server, but apparently even new app does not have recent enough vips).   So the solution may as simple as upgrading vips. (How simple that is, I don't know, since our version of ubuntu apparently wants to give us this one).  Then we would hypothetically need to regenerate tiles for any tilesets subject to the problem, which I'm not sure how to identify... but at least we'd fix it for future tileset generations. 