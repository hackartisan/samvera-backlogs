BrowseEverything Google Drive ingest is failing for more than a threshold number of items
A user has reported that, following the ingestion of a directory containing more than 460 files, only FileSets up to 460 have been ingested.  The example which was provided was: https://figgy.princeton.edu/catalog/0b617fb2-4fd8-495b-b667-ae0004d623da
This is going to require some modifications to `browse-everything` upstream, as selecting a directory for upload currently blocks to resolve each asset URL (for 500 assets, this is completely unacceptable).
The following commits restructure the browse-everything Class APIs in order to better support directory uploads:  https://github.com/jrgriffiniii/browse-everything/commit/ac07efa9a0a58a93e008ebaaafc2a3830ccdb352 https://github.com/jrgriffiniii/browse-everything/commit/04589e39d8399c907288f0b7bf3bd9df07617d3d https://github.com/jrgriffiniii/browse-everything/commit/f2f275c4156abfb86f8c3a2a28f373ca5a21a4fe   I have started integrating this into the `BrowseEverythingJob`: https://github.com/pulibrary/figgy/compare/issues-3273-jrgriffiniii-beverything-gdrive-limits   but now encounter the following error I've been having difficulties addressing: ``` figgy/app/services/event_generator/manifest_event_generator.rb:30:in `record_updated' figgy/app/services/event_generator/manifest_event_generator.rb:72:in `publish_message' figgy/app/services/messaging_client.rb:9:in `publish' figgy/app/services/messaging_client.rb:25:in `exchange' figgy/app/services/messaging_client.rb:21:in `channel' figgy/app/services/messaging_client.rb:17:in `bunny_client' figgy/app/services/messaging_client.rb:17:in `tap' gems/bunny-2.6.6/lib/bunny/session.rb:299:in `start' gems/bunny-2.6.6/lib/bunny/transport.rb:291:in `maybe_initialize_socket' gems/bunny-2.6.6/lib/bunny/transport.rb:279:in `initialize_socket' gems/bunny-2.6.6/lib/bunny/cruby/socket.rb:29:in `open' lib/ruby/2.4.0/socket.rb:617:in `tcp' lib/ruby/2.4.0/socket.rb:227:in `foreach' lib/ruby/2.4.0/socket.rb:227:in `getaddrinfo'  -- Machine register context ------------------------------------------------  rax: 0x0000000109ac0a38 rbx: 0x00007f872ea861a0 rcx: 0x0000700004c980ac  rdx: 0x0000000000000000 rdi: 0x00007f872ea861a0 rsi: 0x0000000000000a03  rbp: 0x0000700004c926c0 rsp: 0x0000700004c92280  r8: 0x0000000000000073   r9: 0x0000000000000000 r10: 0x000000000000006c r11: 0x0000000000000202  r12: 0x00007f872ea861a0 r13: 0x0000000000000000 r14: 0x0000000000000002  r15: 0x0000000109ac0a3c rip: 0x00007fff707d590a rfl: 0x0000000000010202  -- C level backtrace information ------------------------------------------- ```
This is now just failing with the HTTP requests for https://github.com/pulibrary/figgy/blob/master/app/services/file_appender.rb#L35.  Perhaps the auth. header is being lost somewhere for the file downloads.
https://github.com/pulibrary/figgy/commit/13bc17030c9e6d48f1545658aa4903313f786bba gets this working with https://github.com/samvera/browse-everything/commit/882d51b2d55ee7b820dd8c3bb3021717f7e8e978 when Sidekiq is disabled.  However, https://github.com/pulibrary/figgy/commit/13bc17030c9e6d48f1545658aa4903313f786bba#diff-c9f03683144c96ae5b9d2636a43218d0R24 will not retrieve the auth. token from the cached session if these are run on Sidekiq workers.
https://github.com/pulibrary/figgy/commit/84a5fab675347deb2967a6c53913d7b50cbbe5ad didn't seem to work by ensuring that the auth. token is persisted with the `PendingUpload`.  Perhaps it expired?
Yes, these appear to expire at times while remaining in the Sidekiq queue.
Passing environment variables and setting a fixed path for the Google Auth. token store fixed this for Sidekiq workers.
https://github.com/samvera/browse-everything/commit/138f76fbe8305a589489b16127dc81b212e23e65 and https://github.com/pulibrary/figgy/commit/4b54e574609727973e62449b858071c0fc225b40 get this properly functioning for Sidekiq.  Some API adjustments will need to be introduced to the file system provider in browse-everything, but this should now use Sidekiq jobs to iterate through member resources in directories.
https://github.com/samvera/browse-everything/commit/b64d9cf2d2d2d320fe65d9b3431d7ee20c28c9a7 and https://github.com/pulibrary/figgy/commit/c4a0169f4ef653ea657641f5c168d7a5956f877d get this properly running also with the FileSystem provider for `browse-everything`.