FiletSet depositor is incorrect when uploading on behalf of
When uploading a work on behalf of another user, the work's permissions have depositor as the "on behalf of" user, and the person uploading has edit access. However, the file set's permissions are reversed: the depositor is the person uploading while the "on behalf of user" has edit access.
There's a three-way race condition between `GenericWorkActor`, `AttachFilesToWorkJob` and `ContentDepositorChangeEventJob`. `AttachFilesToWorkJob` uses the work's depositor as the depositor for the file set. However, which depositor is set on the work depends on when `ContentDepositorChangeEventJob` has run.  The first time `apply_depositor_metadata` is called on the work is in `GenericWorkActor` via `CurationConcerns::Actors::BaseActor`, where it is set to the current user, *not* the `on_behalf_of` user.  At some point later, `ContentDepositorChangeEventJob` runs which changes the value of the depositor to the `on_behalf_of` user. But, note, that at this point there are no file sets attached so even though the job would also change the file set depositor in a transfer situation, is does not here.  When we get to `AttachFilesToWorkJob`, it's looking at the work's depositor.  If `ContentDepositorChangeEventJob` has run, it will be the correct `on_behalf_of` user. This is the case when running locally and all jobs are run inline, and it also seems to be the case when running with Resque locally because the actors apparently execute fast enough to invoke `ContentDepositorChangeEventJob` before `AttachFilesToWorkJob` gets called.  However, in production deployments to staging and QA, it appears that `AttachFilesToWorkJob` wins the race and attaches the file set to the work before `ContentDepositorChangeEventJob` has a chance to finish.  A possible solution is to override `apply_depositor_metadata` in our local `GenericWorkActor` to ensure the depositor will always be the right one regardless of what `ContentDepositorChangeEventJob` does. 
Still needs to be fixed based on research done: #978 