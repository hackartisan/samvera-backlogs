Allow users to obtain manifests URLs of figgy content for use in EAD/Finding Aids
In order for Figgy content to show in Finding Aids, someone in RBSC will need to either manually or automatically add a <dao> reference to a component <did> element. Find the  in the following example: https://findingaids-dev.princeton.edu/collections/C0744.03/c0090.xml <dao xmlns:xlin="http://www.w3.org/1999/xlink" xmlns:xli="http://www.w3.org/1999/xlink" xli:type="simple" xli:role="iiif-manifest" xli:href="https://figgy.princeton.edu/concern/scanned_resources/9d39a643-16f5-4342-8157-32daa2833939/manifest"/>  It would be easiest to provide a hash/csv/spreadsheet of component_ids to manifests for a collection, and then a script could add the content to the EAD. componentID    | manifest URI __________________________________________________________ C0744.03_c0090 | https://figgy.princeton.edu/concern/scanned_resources/9d39a643-16f5-4342-8157-32daa2833939/manifest __________________________________________________________ ...            | ...  The next best thing would be to make it easy for a user to copy the manifest URI. Part of: #810
Here is a simple shell script implementation that outputs the `source_metadata_identifier` and manifest URL:  ```sh #!/bin/sh    COL=a0624f5e-30e6-46f2-b1e8-f4ab8eb8cee4 # figgy collection id NUM=346 # items in the collection SOLR=http://localhost:9999/solr/figgy/select # SSH tunnel  curl -s "$SOLR?q=member_of_collection_ids_tsim:$COL&fl=id,source_metadata_identifier_ssim&rows=$NUM" > $COL.json cat $COL.json | jq -c '.response.docs[] | [.source_metadata_identifier_ssim[0], .id]' | sed -e's/\["//' -e's/","/ https:\/\/figgy.princeton.edu\/concern\/scanned_resources\//' -e's/"\]/\/manifest/' > $COL.txt ```  A Ruby implementation could avoid assumptions about the number of items, the type of the resources, etc.