Use handle service to create handles on asset creation
Blocked by:   NOIDs for objects have to persist after asset creation (either because we're creating in production, or we're migrating content from dev in such a way that NOIDs persist with the object).  Acceptance Criteria:   When an asset is created (either via GUI or importer), a central Handle creation service is called.  The handle service creates a unique Handle that resolves to the asset display page in heliotrope, and returns the Handle URL to the calling method.  The Handle URL is added to the asset's metadata.
we will need this for HEB
#847 is a duplicate
Note from Sebastien, re: the handle creation workflow for DLXS: "Aaron hits the database directly, as the Java tool is too slow for his needs. Handle 8 that we are now using has new REST API we should explore. That will take a bit of playing around and updating of local tools though."
I've made some updates to this script: tang:/quod-dev/bin/f/fulcrum/makeHandleBatchFile.pl   Usage: cat $inputfile | makeHandleBatchFile.pl -d /$output_dir  This script reads from STDIN, creates a batchfile in $output_dir, calls the handle registration service, and writes the results to a log file in $output_dir. As a result, handles are either CREATED or MODIFIED as necessary.  Input should be a comma-separated plain text file. Note that no text delimiter is used, unlike the CSV format we use for the import/export process. Just the comma... no double-quotes!  It should simply have two values per line:  1. The non-namespaced portion of what is to be the handle.     In most cases, this will be the NOID, but this script allows for bespoke handles.      Whatever the value, it will be appended to '2027/fulcrum.' to create the actual handle. 2. The full path to the resource.      This value will be appended to '', unless it's a full URL (contains 'http') in which case it's used as is.  Handles are created using Java-based command-line tools on tang. Someday, the new API should be investigated.  