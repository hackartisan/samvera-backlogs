Disentangling workflow-service
Example logs from one rspec run, massaged and piped through sort | uniq -c | sort -rn  82 get   82 get   68 get   39 get   39 get   35 get   22 get   20 get   20 get   18 get   16 get   14 get   14 get   14 get   14 get   12 get   12 get   12 get   12 get   12 get   11 get   11 get   10 put   10 get   10 get   10 get   10 get   10 get   10 get   10 get   10 get   10 delete   10 delete    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    8 get    7 get    7 get    7 get    7 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    6 get    5 get    5 get    5 get    5 get    5 get    5 get    5 get    5 get    4 put    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    4 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    3 get    2 get    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 put    1 get    1 get    1 get    1 get    1 delete    1 delete    1 delete   So the interesting thing is how many of these calls are not for fixtures, but for something (presumably) related to fixtures.  This is the extent of stubbing we would need to accomplish to isolate workflow service and make hydrus kosher with Travis CI.
Also, just stubbing the top 3 would save 232 REST requests.  Maybe this test battery wouldn't take 10-15 minutes anymore... 
Collapse double-slashes for more canonical URLs. 
Doing this:  ``` ruby RSpec.configure do |config|   config.before :each do     pids = Hydrus.fixture_pids     pids.each { |pid|       begin         doc = Hydrus.fixture_foxml(pid, :is_wf => true)       rescue         doc = '<workflows objectId="' + pid + '"/>'       end       allow(Dor::WorkflowService).to receive(:get_workflow_xml).with('dor', pid, 'workflow')         .and_return(doc)     }   end end ```  Resulted in this:  ``` Finished in 112 minutes 14 seconds (files took 13.04 seconds to load) 580 examples, 117 failures, 1 pending ```  So blanket stubbing is too much of a performance loss.  Will need to do file by file instead. 