XXXable Modules are not isolated concerns
The modules that Hydrus has separated out are not distinct or atomically testable.  Therefore they do not contribute to composability or testability.  They are only usable in a particular aggregate context, namely generic_object_stuff or its descendants.  That means they are basically pointless.  You could randomly split a big Module's functions into different files and get the same results. For example:  eventable calls events and changed_fields without any assurance they are defined.  At the very least it should check during included or at runtime with a sensible error. user_workflowable expects object_status, validate! and errors.  It expects equal_when_stripped? from model_helper, but it doesn't itself include model_helper.  Reasons? licensable expects rightsMetadata. contentable expects files. None of them extend ActiveSupport::Concern... or anything for that matter. Some define module level variables (that get injected as class instance variables) Others just expect the including class to have @whatever defined, like validatable does for @should_validate. others define GLOBALS, including several unnecessary convenience ones. etc.  If one module depends on another, it should be included directly.  Compare to dor-services.
 -sul  