OrderManager doesn't work when there is an error with one of the members
A single issue can prevent rending the entire OrderManger. Examples:  A resource has a thumbnail set to an object that no longer exists. A resource has file sets and a child member that has no attached files.   nothing is displayed, not even the file sets     vue.esm.js:1741 TypeError: Cannot read property 'iiifServiceUrl' of null   at system.js:31   at Array.map (<anonymous>)   at a.galleryItems (system.js:31)   at Rt.get (vue.esm.js:3142)   at Rt.evaluate (vue.esm.js:3249)   at a.galleryItems (vue.esm.js:3507)   at a.r (system.js:31)   at a.e._render (vue.esm.js:4544)   at a.<anonymous> (vue.esm.js:2788)   at Rt.get (vue.esm.js:3142)
 Hmm... I'm not able to reproduce this by deleting either a fileset or a resource that is set to a thumbnail.   Regardless, if that is indeed the problem, then I would argue that the bug is at least partially with the database/backend in not enforcing rules to remove references to the object when it's deleted. 
 You're right. There are definitely some things happening on the backend that exacerbate this problem. I'm not sure why the thumbnail issue happens sometimes, but it shouldn't bork the whole OrderManger. As an example, see this record:    There are file sets attached to the parent as well as scanned resource children that have no files of their own. This is probably just a mistake, but you can image this happening when building a resource. The OrderManager shows nothing. Not even the attached images.
As regards the thumbnail, it looks like the thumbnail id property is not cleared out when deleting a member. One would think, however, that you could go to the order manager to set the thumbnail to a new id. However the resources won't load to enable you to choose a new thumbnail.
Created a ticket to handle the thumbnail issue: 
There are still some problems which I can reproduce for this, but they don't seem to actually break the viewer for this.  Two scenarios I've reproduced are for a Multi-Volume Work (a Scanned Resource with one FileSet, and with a Scanned Resource for a member [which also has a FileSet]):  - When the actual files on the FileSet used as the thumbnails for either the parent or the member are deleted (but the FileSet still exists), the thumbnails are retained in the OrderManager (this is likely due to caching on the IIIF Image Server) - When the FileSet used as the thumbnail is deleted entirely, the ScannedResource as a volume simply isn't rendered at all in the OrderManager  I can foresee the second scenario being encountered by users (users can manually delete FileSets), but not likely the first (without a bug occurring at the file storage layer, or some process corrupting the `FileMetadata` nodes for the FileSet).  I can proceed by testing for the scenario where a FileSet was purposely deleted.
Without significantly changing the functionality of the OrderManager, I could only offer a warning message to the user when no FileSets could be found for a Resource.  At the moment, the OrderManager only retrieves member resources (using GraphQL) for any given ScannedResource.  Hence, it will either retrieve a member FileSet, or, a member ScannedResource.  Any member ScannedResources do not have their own FileSets retrieved (i. e. there is no recursion for membership).  In order to more properly handle this, I would need to propose changes which would disambiguate between FileSets and ScannedResources in the `members` property for the data populated by the GraphQL response: 