Refactor identifier field into multiple fields
Right now we have a single, repeating field, for identifier called alternate_ids field that is contains valkyrie resource ids. But, we have multiple types of identifiers to track and we will want to use them each in different ways. E.g. we will want to be able to re-purpose the PSU identifier in places like the URL, filenames, metadata exports, etc. New data dictionary fields.  identifier_ark (canonical identifier is ARK if present) identifier_psu (library identifier, canonical if no ARK) identifier_cdm (CONTENTdm identifier) identifier_valk (internal valkyrie alternate_id, application only, current value) identifier_alt (actual alternate identifier)  Ideally, identifier_valk is internally to the CHO app and never exposed to the user in the UI, including the URL, but is indexed/searchable. The identifier_ark or identifier_psu, in that order, are canonical and should be used in place.
 Only the first three identifiers need to be relevant here. We can have separate fields in the DD to define the PSU, ARK, and CDM identifiers. They can all be classified as `alternate_id` types. CHO would then store and index them accordingly, and ensure that they are unique across the application.