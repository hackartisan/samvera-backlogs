Shorter URLs for Works and Collections
Descriptive summary Hyrax defaults have several components in Work and Collections URLs, and we'd prefer to have more like we have in OD1, with some further cleanup. Also, FileSets are new and can have similar cleanup. Current OD1 URLs:  Work:                 Collection:           Work-in-Collection:    Current/Default OD2 URLs:  Work:                 Collection:           Work-in-Collection:  (no current Work view nested within Collection) FileSet:               Proposed OD2 URLs:  Work:                 Collection:           Work-in-Collection:   Work-in-Collection:   FileSet:               (we may want to make any /sets/ URLs redirect to /collections/ since all of the labels will be that way, and it's been a confusion having both in OD1) Expected behavior URLs in Proposed section resolve and keep those forms (not redirect to longer versions). Related work samvera/hyrax#1146  - proposed Hyrax changes with some discussion of challenges and solutions osulp/Scholars-Archive#1761 - change to ScholarsArchive to lookup work's model/curation_concern_type and redirect to correct path/controller
## Collection URL Just confirmation that we can create Collections while providing our own `id`.. In the following example, the collection_type_gid is related to the `User Collection` type. So the proposal for collection urls in OD2 is already possible:   ``` irb(main):021:0> Hyrax::CollectionType.first => #<Hyrax::CollectionType id: 1, title: "User Collection", description: "A User Collection can be created by any user to or...", machine_id: "user_collection", nestable: true, discoverable: true, sharable: true, allow_multiple_membership: true, require_membership: false, assigns_workflow: false, assigns_visibility: false, share_applies_to_new_works: false, brandable: true, badge_color: "#705070"> irb(main):022:0> Hyrax::CollectionType.first.gid => "gid://od2/hyrax-collectiontype/1"  irb(main):020:0> c = Collection.new(id: 'osu-scarc', title: ['Special Collections'], collection_type_gid: 'gid://od2/hyrax-collectiontype/1') => #<Collection id: "osu-scarc", depositor: nil, title: ["Special Collections"], date_uploaded: nil, date_modified: nil, head: [], tail: [], collection_type_gid: "gid://od2/hyrax-collectiontype/1", label: nil, relative_path: nil, import_url: nil, resource_type: [], creator: [], contributor: [], description: [], keyword: [], license: [], rights_statement: [], publisher: [], date_created: [], subject: [], language: [], identifier: [], based_near: [], related_url: [], bibliographic_citation: [], source: [], access_control_id: nil, representative_id: nil, thumbnail_id: nil> ```
## Work URL  Because `/catalog` is used by the blacklight search, I'm going to describe something else like `/work` for the sake of the discussion and avoiding the complication of `/catalog`.  I'm imagining a general controller that fetches the work by `id`, detects its work type, sets the _curation_concern_type and appropriate presenter. A route to direct traffic and help in generating urls.. I tested this locally and it works for the basic rendering of a show page, but doesn't include the work to propagate url generation throughout the code (obv).   Also it would probably be a good idea to make the setting of the presenter somewhat more intelligent (if the assumed presenter doesn't exist, default to the GenericPresenter?)  ``` # config/routes.rb resource :work, only: [:show], as: 'work', path: '/work/:id', controller: 'work'  # app/controllers/work_controller.rb class WorkController < ApplicationController   include Hyrax::WorksControllerBehavior   include Hyrax::BreadcrumbsForWorks   before_action :set_worktype    private    def set_worktype     work = ActiveFedora::Base.find(params[:id])     work_type = work.class.to_s.humanize.constantize     self._curation_concern_type = work_type     self.show_presenter = "Hyrax::#{work_type}Presenter".constantize   end end ```