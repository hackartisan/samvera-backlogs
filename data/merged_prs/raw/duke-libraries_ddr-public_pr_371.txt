Create classes to manage thumbnails and portals.
This includes significant changes to how the application determines which thumbnail to use for a document. It simplifies and code and provides a more manageable path for adding additional thumbnail types in the future. Note that this requires adding a configuration to local_env.yml to instruct the application use anything but the default icon set. The protected repository will probably want to just configure the RepositoryGenerated thumbnails. in config/local_env.yml THUMBNAILS: "CustomCollection, MultiresItem, MultiresComponent, MultiresCollection, RepositoryGenerated"  These correspond to thumbnail classes in app/models/thumbnails/ Order matters. The Thumbnail::Selector class will pick the first thumbnail type from this list that is available for the document. It will fall back to the default set if none of the specialized thumbnails are available. Thumbnail::Selector honors document read_permissions to prevent showing a content based thumbnail unless read_permissions is explicitly set to true. See app/helpers/thumbnail_helper.rb to see how to use the thumbnail classes. It's probably best practice to use the thumbnail helper as the views interface to the thumbnail models. Use of the selector class is optional, you can address a specific thumbnail type directly without using the Thumbnail::Selector class. The :default_thumbnail_path helper is an example of this. It instantiates the Thumbnail::Default class directly.