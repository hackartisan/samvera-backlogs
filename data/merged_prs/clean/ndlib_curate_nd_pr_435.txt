#298 Alter CurateND to support redirect datastream
Claiming issue 298 @32562f5574fbae86a50cf6296b766bebd254213b relates to #298 $ ./script/start-issue 298 [skip ci] Copying in super method contents from hydra-core @e82f991ba4eb1077a80ff43bbc62f67248cedc3a Simplifying content_options logic @a555a85b9fbca9965c3ee36e695f9cb165d6a0eb  Copying over hash of defaults from hydra-core datastream.mimeType is a string and is already set as options[:type] Removing unnecessary case statement Moving method location to precede the calling method  Breaking out guarding methods @fe8c318eef2e9e6d2ca321b6151d6b5216ddad07 Slight simplification of send_content logic @09e6227bd238006a166296d7c31c4f9761c9d318 The explicit XML file logic is not needed because of the directive in content_options. Let Disadis set the headers @e9a19de1297944465c7357f991a923cb04dde270 This line had previously just been content_options. This did not alter any behavior because content_options returns a hash literal. send_file_headers! content_options is a convention used in several places in the download behavior. However, when it is included here it causes a browser error because the disposition of the file is set twice. Working notes @a96c4fc19d236c41fbf347c3a97755e382173628 Moving file-specific actions to the detail view @29b5d63917523b6ce384b042d5e42368b8cdd3c5 Updating the generic file show view to match conventions used on the work show pages. Linking directly to files from file thumbnail @14210c3031db867fa43c7ba1657d3ce0fdf3399d Additional links to download a given file @ec31055355a0de0b22ebae5297dd57bd95034de5 Fixes #415 Adding type label to generic file @c7bfad6836928912fd25b011720f3d764f04c7c7 Adjusting expectations @415a54300ef779be6b1935f5f503f5b930759365 Realigning permission badge @47979a55a0fcf5a1229261423927ceed696091af Switching download button text to “Request Retrieval” @995a0c1dbaa4e7342d9eb01b35a9bf8ff2e8e4a1 Placeholder class for file cache status API @049a7bf9d26e5c6330019ac0008fccea04626a73 FileCacheStatus tests using a mock API @b5741fdd4a03412a69968bda22ea4a00a5024196 Restoring random order to spec helper Wrapping service object with a controller action @b9736f4c3b877360a09fd53b3ea1b6b6c2560d69 Letting the responder framework take care of converting objects to JSON. Simple JavaScript cache status checker @aea3b5089f69bddc175a1b1a2d3bfda37485287b Adding notice about file retrieval times. Looking to  or  for input on final text. Updating project scope @bde4a5659c105eaf88b0f394d2161626e1fe9f4b Stubbing out controller for cache recall actions @fb7bc9b9c3a61a93ffa4aa45c7f7b946ca31b1a0 Stubbing out service object for cache refresh API calls @93111a163cd03ed4185052af7f49ff7da1aded11 Stubbing out views for recall pages @ec2839a5f1326073d98a89fb70b226c880872cdc Allow the API response object to be the arbiter of status @6adf2776d6d938f311b467e30f58cf795cf347d4 Normalize pid and noid ids @c692689a32077dbb622c3b01e27a3249d123d12c Adding layout to human-facing pages @c307b1ac7a08e32349ff61940552da3bbef30ea8 Refreshing the file cache only applies to file objects @8e9054fa36415dc0a4a3c84d3817bb5f92164458 We could add cache-warming behavior for works or collections as well but that is out of scope. Enforcing access controls @84983636fb558721dba9001056ebfcaaf5a17518 Enter horrible branching logic in the controller actions Breaking JSON responders out into their own methods @dc7fa045c45160d24833469924a4fa65abdf2c55 Adding messages and fallback form to recall item page @92080033b3be07dd2a7d4fe21f6ad0f5339a6d07 Using http status symbols @1ee6c78417b0494c09b69629a4e8384978e8c6e3 See Rack::Utils::SYMBOL_TO_STATUS_CODE via  Thanks ! Fallback form and HTML request handling sans JavaScript @6bbb6457feb292a1097b8e9de6d0406f1d1cccc3 Passing data between the view and JavaScript @fa08dcc5d3341cad45db32cd284a3a305ec89f2c Ajax loading behavior @f6f9cf477229334dc4446b07b5a6bab022bf18c8 Correcting typo in file delay notice @fa3bbd326a40797126c37db0123d1f8cb3bed6d0 Embedding alternate links in the template @43b85419f9aeafcf2a2845157a7430890ea16baf Altering link targets based on cache status @0abed514c0a314646c711ba1395a49aa89996482 Require arguments to create a Response object @b78b64f7c619e906bd822aa78394440d086f5acd If attributes are not passed then they default to nil. Consolidating knowledge about the identifier @043827a651be01ba740bd4015a72b619fd04ca1c Keyword arguments must have an assignment in Ruby 2.0 @fefa1ba0c6d9c9ba8072cd053f1df23ca6aebe85 Sending cache status requests to Bendo @701f405ae596370ab7d9c7bfc09bec882bce651c Parametrizing Bendo configuration @6d2e1262ad4cd9dc0183b6c51089e598e6bfff62 Giving the full namespace path to the Noid module @03b47b78db92a5cbd7f4ff868dccaa2a78876f09 Fetching Bendo IDs from datastream attributes @c54d078c3677d856542d079c2bf0efc597b0050b Trying to infer Bendo IDs is difficult. It is better to take them from the datastream attributes where it is written. Guard against nil as it can pop up everywhere. Use dependency injection to decouple classes @8c5e8019a7004bb01381017adc034c18795f981c This removes calls directly to the Bendo module. The Bendo URL should be able to come from anywhere. If an item is NOT in Bendo present the download link @73dbecd9379b4d79f98692e0289dbbacc2cb525b This accommodates a mix of content stored inside and outside of Fedora. Adjusting require syntax @b53d2800a43e06aa0a7e93ef45c803b18350f466 It was failing on Travis Correcting parameter name in specs @2e6abe795f660f1f633e15600da1da9376cd74d7 Including stub describe blocks for DatastreamPresenter tests. Adding tests for top-level Bendo functions @c88a365f7a9eada216485eff974e3445f64321c4 Realigning interface between Bendo service objects @9fd2c78902b1c9df796b5a15038f5b8637852173 Adding recall file tooltip @5d9abe7c9144f8a00207ef4f06a9d76d06f09151 For longer lists of files the notice at the top of the file list will not be visible. Also, most people don't read notices. Remove file download notice if no files are on tape @ea72c144c17b73b186958566b8b6375dc3cd4578 Adjusting file cache spooling message @3fc72a8cf60036c8be442b478f233c1a6d4f19c7 Text from  Refactoring file cache request process to use Bendo item identifiers @b933fe433a3f8c30d9a207b7b07653bed1dc056e Provide more information during a manual refresh @034f8aace47f8a124e82b3c774a629a85a6984d9 This improves the communication to someone who is making a manual POST request to refresh the cache. Use a prematurely terminated GET request to warm the Bendo cache @ae302f400be7aafe045dc70c786c8ed21ec4a23a As per the API spec. This implementation is kind of hairy. Because the connection is closed while the response body is still being processed the request ends up nil. This causes an NoMethodError because read_body tries to check if the request is #closed?. AJAX behavior for file retrieval @e3a2f7329541afb11b0e540b93867767bced196b Cleaning up todo list @f43709e9643991b47ee60691e6164f01fd054735 Adding a fake Bendo URL for CI testing @a33a8ccd5d4739be5db2c8a0574f16f7b7df6eb3 Adding a “Request Assistance” button if the Bendo API request fails @d5f32eebbe47e32fd0923018a96d87029357b60f Requested by  Adjusting Bendo URL in CI @fa1f03742d35fe4dc496bf78f7af92ffac45ef51 THIS IS WHY YOU DON'T HARD-CODE VALUES IN YOUR TESTS KIDS. Accommodating edge cases with API requests to Bendo @ff9d9191609376b854135b08916e577bf034b00d Fetch Bendo configuration from secrets @e4c2f2455fd58474cbf55b9f63a6e8547850eaaa Allow ERB in Bendo config file @249c1ad987379bb507743af31670d4babe9fa756 Protect against missing headers in Bendo HEAD requests @bb1aeb3d197a1d462767fc8b0b075f9c583c66d3 The version of Bendo running on staging is outdated and does not return the cache status header. Use proper status code when redirecting after manual form submission @dce61281186da416398d33ce7fba76a5bd08d093 Visual updates to manual file request form @48995416c68b9d72edb5d1e9aa9b3d0f759e1d0f Textual and typographic refinements to status messages @d48edf7db0496818a07c5404042b4f80431826b5 Adding edit page warning for items stored in Bendo @a024131998e3fd44989620a55fdf2dcfe7c9f15e Closing issue 298 @8076809ae79576e7e6b1988c5d52ff2ce63f4716 Closes #298 $ ./script/close-issue 298 Correcting typo @8b3e9005a9a1f00a0be057ba3309828e076fd8e4 Caught by  Use default 404 handling @6fafbe9426706eeac9289234854757ea8aa9b68e There is an ActionDispatch handler for ActiveFedora::ObjectNotFoundError registered in config/application.rb Guarding against nil @f2fc8790855ff99b94afcf69d5e4793e4bb89bda Converting cache response case statement to lookup table @afe719676ce996ade947536f217ac65e7777f772 Refactoring suggested by  Hash logic inspired by advice from :  Clarifying cache warming request logging message @cc5ab45fc2b7e7d0e8271074c5db4a01ce893b23 Suggested by  Getting values out of a hash correctly @037328c21aef653c35316898dad548e6d2c7805b If a hash is initialized with a default value, #[] will return the default value for a missing key. #fetch WILL NOT return the default value for a missing key. The second, optional parameter to #fetch serves as a default value. Thanks for the clarification ! Copy editing @5b244ff2ce737b5489e7d2b0967e7329425f3f66 Typos caught by , , and TextEdit Stubbing out tests for DatastreamPresenter @76a801c1a78cf3b98b0a74fb3a838d9d54dade45 Tests for DatastreamPresenter #valid? @c3c277266d84a905425076c60ca948435b178ebf Tests for DatastreamPresenter #item_path @aada10b23f894b5f5c34228968f8566e3712a8b7