Refactor DOI minting to use Duke's ezid-client gem
Refactor DOI minting to use  gem: 4285a88  Bump ruby version to 2.1.10 and added the ezid gem Added a config for the ezid gem to map our env variables to it's config. Created a datacite mapper to convert our different models to the expected input form in the ezid gem. Some notes about this refactor:  Datacite does not allow for array values in creator, changed the DataciteMapper to make sure this gets converted for all models It wasn't clear why we were not using the given creator for audio/video files, so changed to use them. This resulted in all types being squashed to a single mapping. The specs will explicitly exclude multiple creator case for SeniorThesis though, since this model does not seem to support creating instances with an array of creators   Added a new service class object Doi::Datacite that handles most of the remaining things that the hydra remote identifier gem did for us. As part of this, removed/refactored several things that just no longer made sense:  Added a more explicit input that a form will submit when requesting to get a remote identifier (get_one). Doing this removed the need for accessor_name comparison in                curate_nd/app/repository_models/curation_concern/remotely_identified_by_doi.rb                    Line 36       in       5a3f2b5                                                     doi_assignment_strategy.to_s == doi_remote_service.accessor_name.to_s                     Retained normalize_identifier. This is primarily for cleaning input when the user enters their own doi, so was still needed. Migrated from  Changed views to always check if an object responds to doi behavior before rendering the partials. Doing this removed dependence on registered?  Removed odd if expression at the end of inputs in _form_doi.html.erb. Still not sure why these were there Removed doi_url from application config, it's now in env as DOI_RESOLVER Had to change how the specs determine if a model is using DOI minting since it's no longer using a registered pattern Could not get VCR to work correctly for this. Changed it to mock the call to the DOI class instead to prevent calls to this api. Removed the cassette to avoid future confusion since it appears it never matched. During testing for the normalization of identifier strings, noticed a few missing cases for spaces and expanded the substitutions to remove these   A few additional, semi-unrelated changes:  Removed app/workers/mint_remote_identifier_worker.rb as it is unreachable/unused code. Changed the app root for dev to use https since this is now our default Added a commented out directive to run background jobs in dev env config to make it simpler for others to discover how to turn this on when needed.