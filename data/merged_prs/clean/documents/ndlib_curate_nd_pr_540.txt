Dltp 589 integrate osf features
The following web log for a local batch ingest was generated through an portion of the integration: 2016/09/15 10:24:50.409192 -----Starting Server 2016/09/15 10:24:50.409316 queuepath = test 2016/09/15 10:24:50.409319 taskpath = tasks 2016/09/15 10:24:50.409321 PortNumber =  15000 2016/09/15 10:24:57.757948 PUT /jobs/osfarchive_20160915T142457Z 2016/09/15 10:24:57.759677 PUT /jobs/osfarchive_20160915T142457Z/files/osf_projects 2016/09/15 10:24:57.761268 PUT /jobs/osfarchive_20160915T142457Z/files/JOB 2016/09/15 10:24:57.762847 POST /jobs/osfarchive_20160915T142457Z/queue 2016/09/15 10:24:57.802176 GET /jobs 2016/09/15 10:25:00.412779 Processing job osfarchive_20160915T142457Z 2016/09/15 10:25:00.413319 Done processing job osfarchive_20160915T142457Z (error)  The processing of the job failed because I don't have the workers running. Nor do I have the proper data structure in the get request for my application. Claiming issue DLTP-589 @fac680aec1334cc010b4f37dd140aa47ab51b9d7 $ ./script/start-issue DLTP-589 [skip ci] Adding IngestOSFArchive#as_hash method @ab2574a9d2944fff64eea04a852d070a24111a0d I want a primitive object to pass onto the remote job server. Moving and renaming IngestOSFTools to worker @4cee4feb326744d55d268ec009ec7f3834053614 As a matter of practice, avoiding classes that end in "s" and could confuse the pluralization patterns of Ruby/Rails (i.e. classes are named as a single as they represent the concept of the object). Converting OsfIngestWorker Sufia ready worker @5740a342a174d2a9ffdf31225f07340802fecf59 This involves:  adding a #run method ensuring that we set values via primitives passing the work onto the more involved handler  Wiring together OsfIngestWorker @b38c2f4a67c25c7fc680bc4e4a4863dd19ce602d Ensuring that the ingest request fires outside of the request cycle. Adding exception handling for OSF Ingest worker @5f528a6648e7c1605bf9eaf1c7ba0bb820614f00 I want to raise the error (and let it hit the Resque pool), but I also want to know about the errors. Tidying up BatchIngestor error reporting @ef95539fe8a422762f2900ae00e7acfb4a2c40c3 I want the information to bubble up. One challenge is that Airbrake may be getting called twice for the same problem. Moving OSF Project URL @30b9efc55bc0238e3ffc0b91bd0c39ac45800d96 There was knowledge about building the project_url in a class that was passing along that data as a payload for a remote service. This logic has a more appropriate space in the Admin::IngestOSFArchive object. Adding job prefix as a responsibility of OSF @1047efe1c9714c8684dfffa12250a44985802551 The prefix of OSF Archive is helpful. But having the project identifier is another helpful aspect. Adding mocking for integration of OSF controller @b986610964affb5cc4491e70ef95dca6b2ad6f09 With the full behavior leveraging the Worker ecosystem, we now need to ensure that the worker doesn't fire. Closing issue DLTP-589 @0dd34e1842a6b4612470a89bdedf3684840fd201 $ ./script/close-issue DLTP-589