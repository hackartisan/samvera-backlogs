Implement derivative processors
Implements derivatives for images in stages.  The openjpeg tools can't convert many formats to JP2 directly, so we make sure we have a BMP, and then convert that to JP2.  It's a bit messy and definitely inelegant, but it does the job. We also have to implement graphicsmagick-based processing to deal with the intermediary image conversions.  The Hyrax code uses MiniMagick, which doesn't work with graphicsmagick when trying to flatten an image, which Hyrax does on resize operations.  The rationale for ditching ImageMagick?  ...it doesn't work with huge images.  It just crashes. The fileset derivative service now subclasses from Hyrax::FileSetDerivativesService.  This lets us use a single service without losing the derivative generation Hyrax gives us that we don't need to customize. We need to use our custom processors instead of the hyrax ones where applicable, so our options appear to be subclassing or else copying and pasting a ton of Hyrax code.  Putting our service into a list with the Hyrax ones actually causes both to fire off, not just the first one that handles the asset's mime type.