Project 17
Adjust Collection Behavior to include new set of precidate as per new specification @bf179eb2417cc7d8eddbd4cf0aa8a1590b85090e As part of Project_17, this commit will include new set of attributes in collection Add/Adjust new attributes to descMetadata Update form to include those attributes Show them in collection show page Adding spec for collection model @d640a6bfb2eccd5719d318f43d9186ff1e7ae81e Removing additional descMetadata added to collection form and adding spec for collection @d44228d42c2f16ad201e27e193494b2ef48abd01 Remove edit and delete collection feature from UI @1bee437854d96fd20824707bce4b738c7a3a2d16 Adding curate's collection specs @641eaca67fe0ce27c529fcc7ba98baa58e0bbd5c These needed to be ported over from Curate's test suite before we begin gutting the collections. Renaming spec file to reflect convention @e937b637ee49a565d14043567fef835915bf4767 Adjust Collection Behavior to include new set of precidate as per new specification @2ea67e016389dd7c8d88527c73297dff08f4429d As part of Project_17, this commit will include new set of attributes in collection Add/Adjust new attributes to descMetadata Update form to include those attributes Show them in collection show page Adding spec for collection model @7f87910be935b0093786e6f557dd935e908422f0 Removing additional descMetadata added to collection form and adding spec for collection @dd5abc92b18787258fd388668628e86867fba477 Adding a preliminary library collection model @bb98d0d5c6d3a9bd5ee0e41230cbca521f4766e8 I want to work on the specifics of the Library Collection model instead of attempting to deprecate some of the existing Collection model behavior. At a future point, we can either migrate the data from LibraryCollection to Collection or obliterate the existing Collection model when we have enough of the given behavior worked out. Adding LibraryCollectionRdfDatastream @ee7026a94e5303fd5f866a683b144a1a2b2e6b33 Instead of relying on the external dependency, I want to leverage a copy of my own understanding. Updating LibraryCollection relationships @aec45b882e33833f9efc8d7ea69b4d02017bcab8 Needed to add a few missing RDF data stream elements. Also testing relationship behavior. Adding specs for member of library collections @83acac323faba9b82a1eb6a6d5b1cb7b474d7cf5 Adding Curate::Indexer gem dependency @f4adc5a13815be9cadea30cf5be8207b5293327c I'm opting to keep the indexing logic separate at this point, as I want to use the Curate::Indexer as an exemplar on development. I working on a series of blog posts to draw attention to this very development step. Adding the stubbed specifications for Indexing @4ad235a577a767e2673ce16166c33aabc0cbc77f Adding the ObjectRelationshipReindexerWorker @a5f0cbfe6607c568837168d090ea0038fc950286 The worker is responsible for coordinating the reindexing relationship interactions. Bumping Curate::Indexer version @ad8935ca41945ab7df0635dcb66ff409a9d730ab Consolidating initializers of like name @c1ab7c6641d9a02f6bd820438578d65bdc1d1d6b Instead of all of the disparate initializers, attempting to gather them into a common locations. Adding adapter configuration for Curate indexing @b818305c9d9d125c6a57724dc20fb174315202c9 Implementing .find_preservation_document_by @ff5dc27c7f58b73a0c53df983e037bf555707026 The Curate::Indexer requires a find_preservation_document_by method. This implementation is a bare-bones implementation that delivers to the document spec. Implementing .each_preservation_document @8ee0f80c14ca0bd84aed97a640bd20d58c485c52 I want a way to reindex the relationships of the entire Fedora ecosystem. This method is a requirement for that feature, as it implements the specifics of the AbstractAdapter.each_preservation_document method. Implementing .find_index_document_by @efc4d7afb4127aebfe944ef6db3ed2408d6079b0 I want to use the query service to get the raw SOLR document so I can update individual items in the index. Implementing happy path IndexingAdapter @e5e3d79940807e1358edda5cd8db40864fbc6cf5 This means adding the methods:  .each_child_document_of .write_document_attributes_to_index_layer  Integrating relationship reindexer @ed803b1e737e1742f0fa2ed70bfd4c1a8c754d6f I would have loved to fire the relationship indexer as part of a callback (well, at least as part of the model). But that was not feasible given that the after_save callback fired 5 times during a single web transaction. I'd prefer to not piggy back on that behavior. Instead, I've added the relationship reindexer as part of the curation concern's actor. Ensuring relationships are reindexed via worker @1b5c7335681412a3c3defe847735ba6de1d3e08d I'm attempting to reduce the load on the workers so that our relation- ship reindexer fires only as needed. One of those moments is when we request a specific reindex action. Bumping to latest Curate::Indexer interface @98b66e92ce36b2b04fa2b4487e64b265872008d7 Renaming to LibraryCollectionIndexingAdapter @1187c06f9371ada4b71ee451abd9e2da5ee2fcbb The previous name was ambiguous; It was not the indexing adapter for the entire system. With the more specific name, it clarifies its usage. Adding rudimentary relationship indexing @e6849107d12b659412fba83c5e7f42b17a6446ae While this is incomplete, it is aspects of the indexing that can occur. Moving Curate::Ability into Ability class @36ba657ddd9512c6f11eff28981e0a811a4e52c4 We no longer need worry about the engine based-separation. So consolidate to improve readability. Adding permissions for LibraryCollection @87b5f4f444c988599526ff180f506357494c8906 Rendering LibraryCollection via common objects @1b15cb835f20bad28a5d5e35cdfddcd3fe7614e5 Added a rudimentary rendering capability of the LibraryCollection via the CommonObjects controller. Amending indexing adapter to use ActiveFedora @be52b5e7f4d68a68517e47af919e88ebe93ca387 Instead of using the solr document as the hash to merge, I need to rebuild that SOLR document. To not rebuild the SOLR document would instead jeopardize the non-stored elements. Allow rendering of Library Collections in search @38de1a48b5ec950e5910327e91778c34c7a93d90 This is a rudimentary rendering of collections data Replacing resource URL creation with explicit @f89c9041e068d5f2f28708cae726ee23b5f07340 When using the library_collection as a parameter to the path method, it includes the namespace (i.e. und:) of the PID. Instead opt to exclude that. Adding show partial regarding collection members @96b84433ef5fd9ff627a57cb415a7cad541a423c This may or may not be adequate for library collections but is a forward step. Rendering library collections instead of old @949012981bb039c7255ea42578dd93cc1e2efdfa The old collections are in effect deprecated. We don't want to be tracking them anymore. So I'm removing their rendering. Restoring old style collections to presentation @7192007ec1472d71b67708fd1bf06fc045a226a2 Closes #420 Bumping Jetty wait time for CI @584c2557be01d349e9d5ae48fa2a0e04d80d72da Requiring ObjectRelationshipReindexerWorker @fed5a644773167cbb82a65ea41c60b2da97dca6c This is a bit of a stab in the dark as it manifested in staging: uninitialized constant ObjectRelationshipReindexerWorker ./active_support/inflector/methods.rb:226:in `const_get' ./active_support/inflector/methods.rb:226:in `block in constantize' ./active_support/inflector/methods.rb:224:in `each' ./active_support/inflector/methods.rb:224:in `inject' ./active_support/inflector/methods.rb:224:in `constantize' ./active_support/core_ext/string/inflections.rb:66:in `constantize' ./active_support/core_ext/marshal.rb:10:in `rescue in load_with_autoloading' ./active_support/core_ext/marshal.rb:6:in `load_with_autoloading' ./sufia/models/resque.rb:24:in `perform' Tweaking travis to not use caches @417e931dde36445165ceaea068c1dd19646866d4 Adding AllRelationshipsReindexerWorker @1c119ae79f0391a249e1355c59c7e5afd7b4e0d8 Updating curate-indexer to report exceptions @e3754cf191be6d90cfe59947b4472076398409b2 Updating derived_dates to skip blanks @0334f1861733e8b3d5898cb872c0345f48b248aa Prior to this commit: Given a date_created of `""` When I asked for derived_dates, I got `[nil]` Then an exception was thrown because the derived_dates were empty This is the expected behavior of Array#map. Instead we want to skip unset elements.